{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","role","type","msg","Navbar","concat","mode","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","htmlFor","TextForm","text","setText","useState","totalNumbers","setTotalNumbers","Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","handleupclick","newtext","toUpperCase","showAlert","handleLCclick","toLowerCase","handleCNclick","counter","i","length","element","isFinite","handleclear","handextraspace","replace","trim","split","defaultProps","title","name","App","Darkmode","setdarkmode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1db7a23b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div className= \"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch my-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  mode: PropTypes.string.isRequired,\r\n  togglemode: PropTypes.func.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'set title here',\r\n};\r\n","import React, { useState } from 'react'\r\nexport default function TextForm(props) {\r\n    const handleupclick = () => {\r\n        // console.log(\"upper case was clicked\"+text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Change to UpperCase\",\"Success\");\r\n    }\r\n    const handleLCclick = () => {\r\n        // console.log(\"upper case was clicked\"+text);\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Change to LowerCase\",\"Success\");\r\n    }\r\n    const handleCNclick = () => {\r\n        // console.log(\"upper case was clicked\"+text);\r\n        let counter = 0;\r\n        for (let i = 0; i < text.length; i++) {\r\n            const element = text[i];\r\n            if (element === \" \") {\r\n                continue;\r\n            }\r\n            else if (isFinite(element)) {\r\n                counter++;\r\n            }\r\n        }\r\n        setTotalNumbers(counter)\r\n        props.showAlert(\"Total Numerical Value Counted\",\"Success\");\r\n    }\r\n\r\n    const handleonchange = (event) => {\r\n        // console.log(\"on click\");\r\n        setText(event.target.value)\r\n    }\r\n    const handleclear = () => {\r\n        let newtext = ' ';\r\n        setText(newtext)\r\n        props.showAlert(\"Clean all Text\",\"Success\");\r\n    }\r\n    const handextraspace = () => {\r\n        let newtext = text.replace(/\\s+/g, ' ').trim();\r\n        setText(newtext);\r\n        props.showAlert(\"Remove Extra Spaces\",\"Success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    const [totalNumbers, setTotalNumbers] = useState(0);\r\n    // text = \"new text\"; // wrong way to change the text\r\n    // setText = \"new text\" // write way to change the text\r\n    return (\r\n        <>\r\n            <div className='container my-2' style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h6>{props.heading}</h6>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} onChange={handleonchange} id=\"mybox\" rows=\"5\"></textarea>\r\n                </div>\r\n                <div className='my-2' >\r\n                    <button className=\"btn btn-primary mx-2\" onClick={handleupclick}>Convert to UpperCase</button>\r\n                    <button className=\"btn btn-success mx-2\" onClick={handleLCclick}>Convert to LowerCase</button>\r\n                    <button className=\"btn btn-warning mx-2\" onClick={handleCNclick}>Counted the numeric Value</button>\r\n                    <button className=\"btn btn-danger mx-2\" onClick={handleclear}>Clear text</button>\r\n                    <button className=\"btn btn-danger mx-2\" onClick={handextraspace}>Remove Extra Space</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-4\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h1>Your text Summary</h1>\r\n                <p>Total Numeric Count is: {totalNumbers}</p>\r\n                <p>{text.split(\" \").length - 1} word and {text.length} charactor</p>\r\n                {text.split(\" \").length - 1 === 0 ? (\r\n                    <p>0 Minutes to Read</p>\r\n                ) : (\r\n                    <p>{0.008 * text.split(\" \").length} Minutes to Read</p>\r\n                )}\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\nlet name = \"Ketan\";\n\nfunction App() {\n  const [Darkmode, setdarkmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 3000);\n  }\n  const togglemode = () => {\n    if (Darkmode === 'light') {\n      setdarkmode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enable\", \"Success\");\n    }\n    else {\n      setdarkmode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Ligth Mode has been enable\", \"Success\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"Textutils\" mode={Darkmode} togglemode={togglemode} />\n        <Alert alert={alert} />\n        <h1 className='text-center' style={{ color: Darkmode === 'dark' ? 'white' : 'black' }}>This is the textUtilis Site {name}</h1>\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <div className=\"container my-3\">\n              <TextForm mode={Darkmode} showAlert={showAlert} />\n            </div>\n          {/* </Route> */}\n        {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n\n// npm install react-router-dom@5\n// npm install react-router-dom@5.2.0","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}